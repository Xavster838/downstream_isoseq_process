import os
import sys
import math
from snakemake.utils import min_version
import pandas as pd
from pathlib import Path

min_version("6.0")

SDIR = os.path.realpath(os.path.dirname(srcdir("Snakefile")))
shell.prefix(f"set -eo pipefail;")


#report: "report/workflow.rst"

#specify config file
configfile: f"{SDIR}/../.test/config.yaml"
#include common functions
include: "rules/common.smk"
#get manifest
os.listdir()
manifest_df = pd.read_csv(config["manifest"], sep="\t", dtype=str)
manifest_df  = manifest_df.set_index(["sample"], drop = False)

wildcard_constraints:
    SMP = "|".join(manifest_df["sample"]),
    SPRPOP = "|".join(manifest_df["superpop"])

TEMP_DIR = config.pop("tempdir", "temp")
if TEMP_DIR != "temp":
    if os.path.exists("temp"):
        if os.path.islink("temp") and os.path.realpath("temp") == os.path.realpath(
            TEMP_DIR
        ):
            print("The temp dir has already been linked.")
        else:
            sys.exit("temp/ already in use, please move it before running.")
    else:
        shell("ln -s {TEMP_DIR} temp")


rule get_all_ref_bams:
    input: 
        out_bams = get_all_ref_alignments

rule get_all_t2t_bams:
    input:
        out_bams = get_all_t2t_alignments

rule get_all_hg38_bams:
    input:
        out_bams = get_all_hg38_alignments

rule get_all:
    input:
        nhp_bams = get_all_ref_alignments, #rules.get_all_nhp_bams.input.out_bams,
        t2t_bams = get_all_t2t_alignments, #rules.get_all_t2t_bams.input.out_bams,
        hg38_bams = get_all_hg38_alignments #rules.get_all_hg38_bams.input.out_bams

rule get_sample_ref_stats:
    '''get all stats for sample reference alignment bams'''
    input:
        stats = get_all_ref_stats

rule get_t2t_stats:
    '''get all stats for sample t2t alignment bams'''
    input:
        stats = get_all_t2t_stats

rule get_hg38_stats:
    '''get all stats for sample hg38 alignment bams'''
    input:
        stats = get_all_hg38_stats

#collapse rules
rule get_sample_ref_collapse:
    '''get all stats for sample reference alignment bams'''
    input:
        stats = get_all_ref_collapse

rule get_t2t_collapse:
    '''get all stats for sample t2t alignment bams'''
    input:
        stats = get_all_t2t_collapse

rule get_hg38_collapse:
    '''get all stats for sample hg38 alignment bams'''
    input:
        stats = get_all_hg38_collapse


rule all:
    input:
       tmp_fastqs = [f"tmp/iso_fastqs/{SMP}_{SPRPOP}_FILTERED_2.fastq" for SMP, SPRPOP in list(zip(manifest_df["sample"] , manifest_df["superpop"])) ]



include: "rules/alignment_rules.smk"
include: "rules/annotation_rules.smk"
